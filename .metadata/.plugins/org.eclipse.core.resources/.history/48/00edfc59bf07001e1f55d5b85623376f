package br.com.arq.tardis.service;

import org.springframework.stereotype.Service;

import br.com.arq.tardis.dto.UsersDTO;
import br.com.arq.tardis.entity.Role;
import br.com.arq.tardis.entity.Users;
import br.com.arq.tardis.repository.RoleRepository;
import br.com.arq.tardis.repository.UsersRepository;
import lombok.AllArgsConstructor;
import lombok.Data;

@Data
@AllArgsConstructor
@Service
public class UsersService {

	private final UsersRepository usersRepository;
	private final RoleRepository roleRepository;

	public Object createUserService(UsersDTO usersDto) {
		try {

			Users users = usersDto.createEntityUsers();
			Users resp = usersRepository.save(users);
			if (resp == null) {
				throw new IllegalArgumentException("User not Saved");
			}
			Role role = usersDto.createEntityRole();
			role.setUsers(resp);

			Role respRole = roleRepository.save(role);
			if (respRole == null) {
				throw new IllegalArgumentException("Role not Saved");
			}

			resp.setRole(respRole);
			return resp;
		} catch (Exception ex) {
			throw new IllegalArgumentException ("500,Internal Server Error");
			
		}
	}
	
	
}
